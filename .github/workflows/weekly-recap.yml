
name: weekly-recap
on:
  schedule:
    # Run every Tuesday at 9:00 AM UTC (≈ 1:00 AM PT during DST; ≈ 12:00 AM PT in winter)
    - cron: "0 9 * * 2"
  workflow_dispatch: {}

# Prevent overlapping runs
concurrency:
  group: weekly-recap
  cancel-in-progress: false

jobs:
  generate-recap:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      # Common env for your ETL/compute scripts
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      YAHOO_LEAGUE_YEAR: "2025"
      YAHOO_LEAGUE_ID_SHORT: "576892"
      YAHOO_OAUTH_JSON_PATH: "./oauth2.json"
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Install uv and Python ---
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install Python 3.12
        run: uv python install 3.12

      # --- Cache dependencies ---
      - name: Cache uv packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements.txt') }}
      
      - name: Create venv
        run: uv venv .venv

      - name: Install dependencies
        run: uv pip install -r requirements.txt

      # --- Materialize Yahoo oauth2.json from secret ---
      - name: Write oauth2.json
        run: 'printf "%s" "${OAUTH2_JSON}" > oauth2.json'
        env:
          OAUTH2_JSON: ${{ secrets.YAHOO_OAUTH2_JSON }}

      # --- Generate weekly recap ---
      - name: Generate weekly recap
        run: uv run python -m etl.generate_weekly_recap

      # --- Summary ---
      - name: Recap generation summary
        run: |
          echo "Weekly recap generation completed"
          echo "Check the recaps table in Supabase for the new retrospective recap"
